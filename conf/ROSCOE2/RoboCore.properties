# If 'Controller' is MarlinspikeDataPort instead of physical port like /dev/ttyACM0, then pins refer to WiringPi GPIO pins, otherwise they are
# the physical pins on the Mega2560 or other microcontroller attached to the port, 
# EXCEPT for the PWM0, PWM1, AIN0 and AIN1 which use
# physical pins numbering as they are handled in special case outside WiringPi.
# Phy | WPi 
# 11  | 0
# 12  | 1
# 13  | 2
# 15  | 3
# 16  | 4
# 18  | 5
# 22  | 6
# 7   | 7	(unusable Odroid)
# 24  | 10
# 26  | 11
# 19  | 12	(PWM1)
# 21  | 13	
# 23  | 14
# 29  | 21
# 31  | 22
# 33  | 23	(PWM0)
# 35  | 24	
# 36  | 27
# When designating pins, use the WPi numbers, except for the analog input pins which are designed as:
# 37  | AIN1
# 40  | AIN0
# Assume 3 controllers, so con-one gets slot 0 tty0 for left wheel , con-two gets slot 0 tty1 for right wheel
# con-three gets slot 0 tty0 for boom, con-three gets PWM slot 0 tty0 for LED since PWM uses different slots, and
# con-three gets slot 1 tty0 for lift.
Name:ROSCOE2
IsIndoor:false
# M10 Z0 T1 where T1 = H-Bridge, Z0 = slot 0
# M3 - define H-bridge. M3 [Z<slot>] P<pin> C<channel> D<direction pin> E<default dir> W<encoder pin> [R<resolution 8,9,10 bits>] [X<prescale 0-7>]
# Config H-bridge diff driver slot 0, PWM pin 8 channel 1, Direction pin digital 24, encoder pin 68
# M3 Z0 P8 C1 D24 E0 W68
LUN[0].Name:LeftWheel
LUN[0].NodeName:CONTROL1
#LUN[0].Controller:/dev/ttyACM0
LUN[0].Controller:MarlinspikeDataPort
LUN[0].Type:H-Bridge
LUN[0].Slot:0
#LUN[0].PWMPin0:8
LUN[0].PWMPin0:33
LUN[0].Channel:1
#LUN[0].EnablePin:38
LUN[0].EnablePin:2
LUN[0].Direction:0
#LUN[0].EncoderPin:68
LUN[0].EncoderPin:40
#LUN[0].EncoderType:Analog
#LUN[0].EncoderCount:1
#LUN[0].EncoderLoRange:1023
#LUN[0].EncoderHiRange:1023
LUN[0].MinValue:-1000
LUN[0].MaxValue:1000
WHEEL[0].WheelTrackMM:457.2
WHEEL[0].WheelDiameterMM:203.2
WHEEL[0].TicksPerRevolution:500
PID[0].MotorPIDRate:1
PID[0].MotorKp:1.0
PID[0].MotorKd:1.0
PID[0].MotorKi:1.0
PID[0].MotorKo:1.0
AXIS[0].AxisType:Stick
AXIS[0].AxisX:0
AXIS[0].AxisY:2
CrosstrackKp:1.5
CrosstrackKd:0.9
CrosstrackKi:3.0
CrosstrackKo:1.0
CrosstrackPIDRate:30
MaxIMUDeviationDegrees:180
MinIMUDeviationDegrees:-180
TemperatureThreshold:40
# M3 Z0 P10 C1 D22 E1 W69 - we would define E1 since wheel is essentially reversed so default direction is opposite
LUN[1].Name:RightWheel
LUN[1].NodeName:CONTROL1
#LUN[1].Controller:/dev/ttyACM1
LUN[1].Controller:MarlinspikeDataPort
LUN[1].Type:H-Bridge
LUN[1].Slot:0
#LUN[1].PWMPin0:10
LUN[1].PWMPin0:19
#LUN[1].Channel:1
LUN[1].Channel:2
#LUN[1].EnablePin:39
LUN[1].EnablePin:0
LUN[1].Direction:1
#LUN[1].EncoderPin:69
LUN[1].EncoderPin:37
#LUN[1].EncoderType:Analog
#LUN[1].EncoderCount:1
#LUN[1].EncoderLoRange:1023
#LUN[1].EncoderHiRange:1023
LUN[1].MinValue:-1000
LUN[1].MaxValue:1000
WHEEL[1].WheelTrackMM:457.2
WHEEL[1].WheelDiameterMM:203.2
WHEEL[1].TicksPerRevolution:500
PID[1].MotorPIDRate:1
PID[1].MotorKp:1.0
PID[1].MotorKd:1.0
PID[1].MotorKi:1.0
PID[1].MotorKo:1.0
AXIS[1].AxisType:Stick
AXIS[1].AxisX:0
AXIS[1].AxisY:2
CrosstrackKp:1.5
CrosstrackKd:0.9
CrosstrackKi:3.0
CrosstrackKo:1.0
CrosstrackPIDRate:30
MaxIMUDeviationDegrees:180
MinIMUDeviationDegrees:-180
TemperatureThreshold:40
# config H-bridge actuator slot 1, PWM pin 33 channel 1, Dir pin 2, default dir 0
# M3 Z1 P9 C1 D26 E0
LUN[2].Name:BoomActuator
LUN[2].NodeName:AMI0
LUN[2].Controller::MarlinspikeDataPort
LUN[2].Type:H-Bridge
LUN[2].Slot:0
LUN[2].PWMPin0:33
LUN[2].Channel:1
LUN[2].EnablePin:2
LUN[2].Direction:0
LUN[2].MinValue:-1000
LUN[2].MaxValue:1000
AXIS[2].AxisType:Stick
AXIS[2].AxisX:1
AXIS[2].AxisY:3
CrosstrackKp:1.5
CrosstrackKd:0.9
CrosstrackKi:3.0
CrosstrackKo:1.0
CrosstrackPIDRate:30
MaxIMUDeviationDegrees:180
MinIMUDeviationDegrees:-180
TemperatureThreshold:40
# Define PWM LED driver simple Output pin linked to trigger, axis 4.
# optionally a Type 4 PWM driver in separate slot from motor drivers
# M10 Z0 T4
# then config slot 0 to PWM pin 33 on channel 1 enable pin 3
# M9 Z0 P33 C1 D3
LUN[3].Name:LEDDriver
LUN[3].NodeName:AMI0
LUN[3].Controller:MarlinspikeDataPort
LUN[3].Type:OutputPin
LUN[3].Pin:2
AXIS[3].AxisType:Trigger
AXIS[3].Axis:4
CrosstrackKp:1.5
CrosstrackKd:0.9
CrosstrackKi:3.0
CrosstrackKo:1.0
CrosstrackPIDRate:30
MaxIMUDeviationDegrees:180
MinIMUDeviationDegrees:-180
TemperatureThreshold:40
# If we wanted to use PWN, Define SplitBridge lift actuator slot 1 to Type 2 split bridge driver in motor driver slot
# M10 Z1 T2
# For PWM, Config SplitBridge lift actuator slot 1, pwm pins 6 and 7 for forward/reverse channel 1, enable pin 32, default dir 0
# M4 Z1 P6 Q7 C1 D32 E0
# But if we dont need PWM, we can config a SwitchBridge, which uses output pins at full DC drive level when no PWM and no speed
# control is necessary:
# M10 Z1 T3
# M5 Z<slot> P<pin> Q<pin> C<channel> D<enable pin> E<default dir> [W<encoder>]
# In this config, enable allows either forward or reverse pin to use applied pin output.
# Create switch bridge Z slot, P forward pin, Q reverse pin, D enable, E default state of enable for dir
# Switch bridge or 2 digital motor controller. Takes 2 inputs: one digital pin for forward,called P, 
# one for backward,called Q, then motor channel,
# and then D, an enable pin, and E default dir, with optional encoder.
LUN[4].Name:LiftActuator
LUN[4].NodeName:AMI0
LUN[4].Controller::MarlinspikeDataPort
#LUN[4].Type:SplitBridge
LUN[4].Type:SwitchBridge
LUN[4].Slot:1
LUN[4].PWMPin0:1
LUN[4].PWMPin1:4
LUN[4].Channel:1
LUN[4].EnablePin:32
LUN[4].MinValue:-1000
LUN[4].MaxValue:1000
AXIS[4].AxisType:POV
AXIS[4].Axis:6
AXIS[4].AxisUp:0.25
AXIS[4].AxisDown:0.75
CrosstrackKp:1.5
CrosstrackKd:0.9
CrosstrackKi:3.0
CrosstrackKo:1.0
CrosstrackPIDRate:30
MaxIMUDeviationDegrees:180
MinIMUDeviationDegrees:-180
TemperatureThreshold:40
